[{"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/App.js":"1","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/index.js":"2","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/reportWebVitals.js":"3","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/AppNavbar.js":"4","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/ShoppingList.js":"5","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/store.js":"6","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/ItemModal.js":"7","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/auth/RegisterModal.js":"8","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/auth/Logout.js":"9","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/auth/LoginModal.js":"10","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/slices/index.js":"11","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/slices/itemSlice.js":"12","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/slices/authSlice.js":"13","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/slices/errorSlice.js":"14"},{"size":682,"mtime":1609919386142,"results":"15","hashOfConfig":"16"},{"size":594,"mtime":1609937990458,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1609596472822,"results":"18","hashOfConfig":"16"},{"size":1526,"mtime":1609847834570,"results":"19","hashOfConfig":"16"},{"size":1419,"mtime":1609919545955,"results":"20","hashOfConfig":"16"},{"size":216,"mtime":1609917537312,"results":"21","hashOfConfig":"16"},{"size":1705,"mtime":1609919858236,"results":"22","hashOfConfig":"16"},{"size":2829,"mtime":1609919740821,"results":"23","hashOfConfig":"16"},{"size":344,"mtime":1609919663194,"results":"24","hashOfConfig":"16"},{"size":2524,"mtime":1609919624447,"results":"25","hashOfConfig":"16"},{"size":223,"mtime":1609919111323,"results":"26","hashOfConfig":"16"},{"size":1595,"mtime":1609919527076,"results":"27","hashOfConfig":"16"},{"size":3057,"mtime":1609933202836,"results":"28","hashOfConfig":"16"},{"size":722,"mtime":1609936701044,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18odicn",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/App.js",["62"],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/index.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/reportWebVitals.js",[],["63","64"],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/AppNavbar.js",[],["65","66"],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/ShoppingList.js",["67"],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/store.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/ItemModal.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/auth/RegisterModal.js",["68"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Modal,\n  Button,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert,\n} from 'reactstrap';\nimport { register } from '../../slices/authSlice';\nimport { clearErrors } from '../../slices/errorSlice';\nconst RegisterModal = () => {\n  const [modal, setModal] = useState(false);\n  const [data, setData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const [msg, setMsg] = useState(null);\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const error = useSelector((state) => state.error);\n\n  useEffect(() => {\n    if (error.id === 'REGISTER_FAIL') {\n      setMsg(error.msg.msg);\n    } else {\n      setMsg(null);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (isAuthenticated && modal) {\n      toggle();\n    }\n  }, [isAuthenticated]);\n\n  const toggle = () => {\n    dispatch(clearErrors());\n    setModal((modal) => !modal);\n  };\n\n  const inputHandlor = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    const { name, email, password } = data;\n\n    // Create user object\n    const newUser = {\n      name,\n      email,\n      password,\n    };\n\n    // Attempt to register\n    dispatch(register(newUser));\n  };\n\n  return (\n    <div>\n      <NavLink onClick={toggle} href=\"#\">\n        Register\n      </NavLink>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Register</ModalHeader>\n        <ModalBody>\n          {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n          <Form onSubmit={submit}>\n            <FormGroup>\n              <Label for=\"name\">Name</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Name\"\n                onChange={inputHandlor}\n              />\n\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                className=\"mb-3\"\n                onChange={inputHandlor}\n              />\n\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                className=\"mb-3\"\n                onChange={inputHandlor}\n              />\n              <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                Register\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default RegisterModal;\n","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/auth/Logout.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/components/auth/LoginModal.js",["69"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Modal,\n  Button,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert,\n} from 'reactstrap';\nimport { login } from '../../slices/authSlice';\nimport { clearErrors } from '../../slices/errorSlice';\n\nconst LoginModal = () => {\n  const [modal, setModal] = useState(false);\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n  });\n  const [msg, setMsg] = useState(null);\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n\n  const error = useSelector((state) => state.error);\n\n  useEffect(() => {\n    if (error.id === 'LOGIN_FAIL') {\n      setMsg(error.msg.msg);\n    } else {\n      setMsg(null);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (isAuthenticated && modal) {\n      toggle();\n    }\n  }, [isAuthenticated]);\n\n  const toggle = () => {\n    dispatch(clearErrors());\n    setModal((modal) => !modal);\n  };\n\n  const inputHandlor = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    const { email, password } = data;\n\n    // Create user object\n    const user = {\n      email,\n      password,\n    };\n\n    // Attempt to login\n    dispatch(login(user));\n  };\n\n  return (\n    <div>\n      <NavLink onClick={toggle} href=\"#\">\n        Login\n      </NavLink>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Login</ModalHeader>\n        <ModalBody>\n          {msg ? <Alert color=\"danger\">{msg}</Alert> : null}\n          <Form onSubmit={submit}>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"Email\"\n                className=\"mb-3\"\n                onChange={inputHandlor}\n              />\n\n              <Label for=\"password\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                className=\"mb-3\"\n                onChange={inputHandlor}\n              />\n              <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                Login\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/slices/index.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/slices/itemSlice.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/slices/authSlice.js",[],"/media/shubham/Workspace/GreyAtom/Repositories/Practice-Codes/MERN_Shopping_List/client/src/slices/errorSlice.js",[],{"ruleId":"70","severity":1,"message":"71","line":19,"column":6,"nodeType":"72","endLine":19,"endColumn":8,"suggestions":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"70","severity":1,"message":"71","line":19,"column":6,"nodeType":"72","endLine":19,"endColumn":8,"suggestions":"80"},{"ruleId":"70","severity":1,"message":"81","line":42,"column":6,"nodeType":"72","endLine":42,"endColumn":23,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"81","line":42,"column":6,"nodeType":"72","endLine":42,"endColumn":23,"suggestions":"83"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],["87"],"React Hook useEffect has missing dependencies: 'modal' and 'toggle'. Either include them or remove the dependency array.",["88"],["89"],{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"92"},{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},"Update the dependencies array to be: [dispatch]",{"range":"96","text":"97"},{"range":"98","text":"97"},"Update the dependencies array to be: [isAuthenticated, modal, toggle]",{"range":"99","text":"100"},{"range":"101","text":"100"},[496,498],"[dispatch]",[648,650],[949,966],"[isAuthenticated, modal, toggle]",[927,944]]